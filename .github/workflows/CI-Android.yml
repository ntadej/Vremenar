name: Android CI
on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "**"
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/actions/**"
      - ".github/workflows/CI-iOS-Qt5.yml"
      - ".github/workflows/CI-iOS.yml"
      - ".github/workflows/CI-Linux.yml"
      - ".github/workflows/CI-macOS.yml"
      - ".github/workflows/CI-Windows-Qt5.yml"
      - ".github/workflows/CI-Windows.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  QT_VERSION: 6.3.2
  MAPLIBRE_VERSION: 2.0.1

jobs:
  build:
    name: Build Vremenar (Android)
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Download Qt (desktop)
        id: qt-desktop
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          modules: qtpositioning

      - name: Download Qt (Android, armv7)
        id: qt-android-armv7
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          target: android
          arch: android_armv7
          modules: qtpositioning

      - name: Download Qt (Android, arm64_v8a)
        id: qt-android-arm64_v8a
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          target: android
          arch: android_arm64_v8a
          modules: qtpositioning

      - name: Download Qt (Android, x86)
        id: qt-android-x86
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          target: android
          arch: android_x86
          modules: qtpositioning

      - name: Download Qt (Android, x86_64)
        id: qt-android-x86_64
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          target: android
          arch: android_x86_64
          modules: qtpositioning

      - name: Download MapLibre
        run: |
          wget https://github.com/maplibre/qt-geoservices-maplibre-gl/releases/download/v${MAPLIBRE_VERSION}/qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_Android.tar.bz2
          tar xvf qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_Android.tar.bz2 -C ..

      - name: Set up OpenJDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: Android

      - name: Configure & prepare
        working-directory: source
        env:
          CONFIG_CMAKE: ${{ secrets.CONFIG_CMAKE }}
          GOOGLE_SERVICES_ANDROID: ${{ secrets.GOOGLE_SERVICES_ANDROID }}
        run: |
          echo $CONFIG_CMAKE | base64 --decode > Config.cmake
          echo $GOOGLE_SERVICES_ANDROID | base64 --decode > resources/Android/output/google-services.json

          pushd ../.. > /dev/null || exit
          patch Qt/$QT_VERSION/android_armv7/lib/cmake/Qt6Qml/Qt6QmlMacros.cmake Vremenar/source/3rdparty/qml.patch
          patch Qt/$QT_VERSION/android_arm64_v8a/lib/cmake/Qt6Qml/Qt6QmlMacros.cmake Vremenar/source/3rdparty/qml.patch
          patch Qt/$QT_VERSION/android_x86_64/lib/cmake/Qt6Qml/Qt6QmlMacros.cmake Vremenar/source/3rdparty/qml.patch
          patch Qt/$QT_VERSION/android_x86/lib/cmake/Qt6Qml/Qt6QmlMacros.cmake Vremenar/source/3rdparty/qml.patch
          popd > /dev/null || exit

          mkdir ../build

      - name: Build
        working-directory: build
        run: |
          export QT_HOST_PATH="$(readlink -f "$Qt6_DIR/../gcc_64")"
          qt-cmake ../source \
          -G Ninja \
          -DCMAKE_BUILD_TYPE="RelWithDebInfo" \
          -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
          -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
          -DQT_ANDROID_ABIS="armeabi-v7a;arm64-v8a;x86_64;x86"
          ninja
          ninja apk
