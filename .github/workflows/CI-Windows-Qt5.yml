name: Windows CI (Qt5)
on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "**"
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/actions/**"
      - ".github/workflows/CI-Android.yml"
      - ".github/workflows/CI-iOS-Qt5.yml"
      - ".github/workflows/CI-iOS.yml"
      - ".github/workflows/CI-Linux.yml"
      - ".github/workflows/CI-macOS.yml"
      - ".github/workflows/CI-Windows.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  QT_VERSION: 5.15.2
  MAPLIBRE_VERSION: 2.1.0

jobs:
  build-core:
    name: Build Vremenar (Windows x64, Qt5)
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Download Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==3.1.*
          version: ${{ env.QT_VERSION }}
          target: desktop
          arch: win64_msvc2019_64
          tools: tools_opensslv3_x64
          extra: --base https://mirrors.ocf.berkeley.edu/qt/

      - name: Download MapLibre
        shell: bash
        run: |
          choco upgrade wget
          wget.exe https://github.com/maplibre/maplibre-native-qt/releases/download/v${MAPLIBRE_VERSION}/qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_win64_msvc2019.tar.bz2
          tar xvf qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_win64_msvc2019.tar.bz2 -C ..

      - name: Delete unwanted Link
        shell: bash
        run: |
          rm $(which link)

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: source

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          toolset: 14.29

      - name: Configure & prepare
        shell: bash
        working-directory: source
        env:
          CONFIG_QMAKE: ${{ secrets.CONFIG_QMAKE }}
        run: |
          echo $CONFIG_QMAKE | base64 --decode > config.pri

          pushd "resources/Common/certificates" || exit
          wget.exe https://letsencrypt.org/certs/isrgrootx1.pem
          wget.exe https://letsencrypt.org/certs/isrg-root-x2.pem
          popd || exit

      - name: Build
        shell: bash
        working-directory: source
        env:
          FL_RUN_QMAKE_WINDOWS_NAME: ${{ secrets.WINDOWS_NAME }}
          FL_RUN_QMAKE_WINDOWS_PUBLISHER: ${{ secrets.WINDOWS_PUBLISHER }}
        run: |
          export PATH=$(echo "$PATH" | sed -e 's/:C\:\\Program Files\\Git\\usr\\bin//')
          unset MAKE
          rm /usr/bin/link

          bundle exec fastlane windows microsoft_store

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows-package
          path: source/fastlane/build/windows*/Vremenar.*
