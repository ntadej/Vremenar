name: iOS CI (Qt5)
on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "**"
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/actions/**"
      - ".github/workflows/CI-Android.yml"
      - ".github/workflows/CI-iOS.yml"
      - ".github/workflows/CI-Linux.yml"
      - ".github/workflows/CI-macOS.yml"
      - ".github/workflows/CI-Windows-Qt5.yml"
      - ".github/workflows/CI-Windows.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  QT_VERSION: 5.15.2
  MAPLIBRE_VERSION: 2.1.0

jobs:
  build:
    name: Build Vremenar (iOS / macOS 12 x64)
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Download Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==3.0.*
          version: ${{ env.QT_VERSION }}
          target: ios

      - name: Download MapLibre
        run: |
          wget https://github.com/maplibre/maplibre-native-qt/releases/download/v${MAPLIBRE_VERSION}/qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_iOS.tar.bz2
          tar xvf qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_iOS.tar.bz2 -C ..

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: source

      - name: Setup deploy key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}

      - name: Configure & prepare
        working-directory: source
        env:
          APPLE_DEPLOYMENT_KEY: ${{ secrets.APPLE_DEPLOYMENT_KEY }}
          CONFIG_QMAKE: ${{ secrets.CONFIG_QMAKE }}
          GOOGLE_SERVICES_APPLE: ${{ secrets.GOOGLE_SERVICES_APPLE }}
        run: |
          bundle exec fastlane ios prepare_qt5

          echo $APPLE_DEPLOYMENT_KEY | base64 --decode > appstore_api.json
          echo $CONFIG_QMAKE | base64 --decode > config.pri
          echo $GOOGLE_SERVICES_APPLE | base64 --decode > GoogleService-Info.plist

      - name: Build
        working-directory: source
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          if [ "$GITHUB_REF_NAME" = "deploy" ]; then
            export DEPLOY=true
          fi

          bundle exec fastlane ios app_store || bundle exec fastlane ios app_store
