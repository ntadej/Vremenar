name: iOS CI (Qt6)
on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "**"
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/actions/**"
      - ".github/workflows/CI-Android.yml"
      - ".github/workflows/CI-iOS-Qt5.yml"
      - ".github/workflows/CI-Linux.yml"
      - ".github/workflows/CI-macOS.yml"
      - ".github/workflows/CI-Windows-Qt5.yml"
      - ".github/workflows/CI-Windows.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  QT_VERSION: 6.4.3
  MAPLIBRE_VERSION: 2.1.0

jobs:
  build:
    name: Build Vremenar (iOS)
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2.0.1
        with:
          cmake-version: "latest"

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Download Qt (desktop)
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==3.1.*
          version: ${{ env.QT_VERSION }}
          target: desktop
          modules: qtpositioning qtshadertools qt5compat
          set-env: false
          extra: --base https://mirrors.ocf.berkeley.edu/qt/

      - name: Download Qt (iOS)
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==3.1.*
          version: ${{ env.QT_VERSION }}
          target: ios
          modules: qtpositioning qtshadertools qt5compat
          extra: --base https://mirrors.ocf.berkeley.edu/qt/

      - name: Download Qt patches
        run: |
          wget https://github.com/ntadej/qios/releases/download/v${QT_VERSION}.0/qios_v${QT_VERSION}.0.tar.bz2
          tar xvf qios_v${QT_VERSION}.0.tar.bz2 -C ..

      - name: Download MapLibre
        run: |
          wget https://github.com/maplibre/maplibre-native-qt/releases/download/v${MAPLIBRE_VERSION}/qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_iOS.tar.bz2
          tar xvf qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_iOS.tar.bz2 -C ..

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: source

      - name: Setup deploy key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}

      - name: Configure & prepare
        working-directory: source
        env:
          CONFIG_CMAKE: ${{ secrets.CONFIG_CMAKE }}
          GOOGLE_SERVICES_APPLE: ${{ secrets.GOOGLE_SERVICES_APPLE }}
        run: |
          bundle exec fastlane ios prepare_qt6

          echo $CONFIG_CMAKE | base64 --decode > Config.cmake
          echo $GOOGLE_SERVICES_APPLE | base64 --decode > GoogleService-Info.plist

          pushd ../.. > /dev/null || exit
          patch Qt/$QT_VERSION/ios/lib/cmake/Qt6Qml/Qt6QmlMacros.cmake Vremenar/source/3rdparty/qml.patch
          popd > /dev/null || exit

      - name: Build
        working-directory: source
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          export FL_RUN_CMAKE_XCODE_PATH="${MD_APPLE_SDK_ROOT}"
          export QT_HOST_PATH="$(readlink -f "$Qt6_DIR/../macos")"

          bundle exec fastlane ios testbuild
