name: macOS CI
on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "**"
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/actions/**"
      - ".github/workflows/CI-Android.yml"
      - ".github/workflows/CI-iOS-Qt5.yml"
      - ".github/workflows/CI-iOS.yml"
      - ".github/workflows/CI-Linux.yml"
      - ".github/workflows/CI-Windows-Qt5.yml"
      - ".github/workflows/CI-Windows.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  QT_VERSION: 6.3.2
  MAPLIBRE_VERSION: 2.0.1

jobs:
  build:
    name: Build Vremenar (macOS 12 x64)
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Download Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==2.1.*
          version: ${{ env.QT_VERSION }}
          target: desktop
          modules: qtpositioning

      - name: Download MapLibre
        run: |
          wget https://github.com/maplibre/qt-geoservices-maplibre-gl/releases/download/v${MAPLIBRE_VERSION}/qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_macOS.tar.bz2
          tar xvf qt-geoservices-maplibre-gl_v${MAPLIBRE_VERSION}_Qt${QT_VERSION}_macOS.tar.bz2 -C ..

      - name: Setup dependencies
        run: |
          npm install --global create-dmg
          brew install graphicsmagick imagemagick
          ./source/3rdparty/Sparkle/macOS/download.sh
          ./source/3rdparty/Firebase/macOS/download.sh
          ./source/3rdparty/Countly/macOS/download.sh

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: macOS

      - name: Configure & prepare
        env:
          MAPS_ENDPOINT: ${{ secrets.MAPS_ENDPOINT }}
          API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
          APPCAST_ENDPOINT: ${{ secrets.APPCAST_ENDPOINT }}
          COUNTLY_APPKEY: ${{ secrets.COUNTLY_APPKEY }}
          COUNTLY_APPKEY_DEV: ${{ secrets.COUNTLY_APPKEY_DEV }}
          COUNTLY_ENDPOINT: ${{ secrets.COUNTLY_ENDPOINT }}
          COUNTLY_SALT: ${{ secrets.COUNTLY_SALT }}
          COUNTLY_SALT_DEV: ${{ secrets.COUNTLY_SALT_DEV }}
        run: |
          cat <<EOT > source/Config.cmake
          set(MAPS_ENDPOINT "${MAPS_ENDPOINT}")
          set(API_ENDPOINT "${API_ENDPOINT}")
          set(APPCAST_ENDPOINT "${APPCAST_ENDPOINT}")
          set(COUNTLY_APPKEY "${COUNTLY_APPKEY}")
          set(COUNTLY_ENDPOINT "${COUNTLY_ENDPOINT}")
          set(COUNTLY_SALT "${COUNTLY_SALT}")
          set(CODE_SIGN_IDENTITY "")
          set(PKG_SIGN_IDENTITY "")
          EOT
          pushd .. > /dev/null || exit
          patch Qt/$QT_VERSION/macos/lib/cmake/Qt6Qml/Qt6QmlMacros.cmake Vremenar/source/3rdparty/qml.patch
          popd > /dev/null || exit
          mkdir build

      - name: Build
        working-directory: build
        env:
          ARTIFACT_NAME: Vremenar_macOS.dmg
          VREMENAR_PATH: ../source
        run: |
          qt-cmake $VREMENAR_PATH \
            -G Ninja \
            -DCMAKE_BUILD_TYPE="RelWithDebInfo" \
            -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_OSX_DEPLOYMENT_TARGET="10.14" \
            -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
            -DAPPLE_XCODE_PATH="${MD_APPLE_SDK_ROOT}"
          ninja
          ./build_dmg.sh
