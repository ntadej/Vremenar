# frozen_string_literal: true

# rubocop:disable Lint/MissingCopEnableDirective, Metrics/BlockLength

default_platform :mac

platform :mac do
  desc 'Make a developer ID build'
  lane :developer_id do
    setup_ci if ENV['CI']
    match type: 'developer_id'
    xcode_metadata
    setup_dependencies platform: 'macos',
                       certificate_name: ENV['sigh_si.tano.Vremenar_developer_id_macos_certificate-name']
    build_number
    run_cmake platform: 'macos',
              build_type: 'developer_id',
              build_path: 'fastlane/build/macos/cmake',
              developer_team: ENV['sigh_si.tano.Vremenar_developer_id_macos_team-id'],
              certificate_name: ENV['sigh_si.tano.Vremenar_developer_id_macos_certificate-name'],
              profile_name: ENV['sigh_si.tano.Vremenar_developer_id_macos_profile-path']
    ninja
    create_dmg
    if ENV['DEPLOY']
      notarize package: lane_context[SharedValues::CREATE_DMG_OUTPUT_FILE],
               bundle_id: CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier),
               api_key_path: 'appstore_api.json'
    end
  end

  desc 'Make a store build'
  lane :app_store do
    setup_ci if ENV['CI']
    match type: 'appstore', additional_cert_types: 'mac_installer_distribution'
    xcode_metadata
    setup_dependencies platform: 'macos',
                       certificate_name: ENV['sigh_si.tano.Vremenar_appstore_macos_certificate-name']
    build_number
    run_cmake platform: 'macos',
              build_type: 'store',
              build_path: 'fastlane/build/macos_store/cmake',
              output_path: 'fastlane/build/macos_store',
              developer_team: ENV['sigh_si.tano.Vremenar_appstore_macos_team-id'],
              certificate_name: ENV['sigh_si.tano.Vremenar_appstore_macos_certificate-name'],
              pkg_certificate_name: ENV['sigh_si.tano.Vremenar_mac_installer_distribution_macos_certificate-name'],
              profile_name: ENV['sigh_si.tano.Vremenar_appstore_macos_profile-path']
    ninja
    create_dmg
    if ENV['DEPLOY']
      upload_to_testflight pkg: lane_context[SharedValues::CREATE_DMG_OUTPUT_FILE],
                           api_key_path: 'appstore_api.json',
                           skip_submission: true,
                           skip_waiting_for_build_processing: true
    end
  end
end

platform :ios do
  desc 'Prepare Qt'
  lane :prepare_qt do
    prepare_qt5
  end

  desc 'Prepare Qt5'
  lane :prepare_qt5 do
    setup_qt platform: 'ios_qt5'
  end

  desc 'Prepare Qt6'
  lane :prepare_qt6 do
    setup_qt platform: 'ios_qt6'
  end

  desc 'Prepare dependencies'
  lane :dependencies do
    setup_dependencies platform: 'ios'
  end

  desc 'Make a development build (Qt6)'
  lane :testbuild do
    setup_ci if ENV['CI']
    match type: 'development'
    dependencies
    build_number
    run_cmake platform: 'ios',
              build_type: 'development',
              build_path: 'fastlane/build/ios_qt6/cmake',
              developer_team: ENV['sigh_si.tano.Vremenar_development_team-id'],
              certificate_name: ENV['sigh_si.tano.Vremenar_development_certificate-name'],
              profile_name: ENV['sigh_si.tano.Vremenar_development_profile-name']
    build_app scheme: 'Vremenar',
              project: lane_context[SharedValues::RUN_CMAKE_PROJECT_PATH],
              export_method: 'development',
              build_path: 'fastlane/build/ios_qt6/archive',
              derived_data_path: 'fastlane/build/ios_qt6/derived_data',
              output_directory: 'fastlane/build/ios_qt6',
              output_name: 'Vremenar.ipa'
  end

  desc 'Make a store build (Qt5)'
  lane :app_store do
    setup_ci if ENV['CI']
    match type: 'appstore'
    dependencies
    build_number
    run_qmake
    update_project_team path: lane_context[SharedValues::RUN_QMAKE_PROJECT_PATH]
    update_code_signing_settings use_automatic_signing: false,
                                 path: lane_context[SharedValues::RUN_QMAKE_PROJECT_PATH],
                                 code_sign_identity: ENV['sigh_si.tano.Vremenar_appstore_certificate-name'],
                                 profile_name: ENV['sigh_si.tano.Vremenar_appstore_profile-name']
    build_app scheme: 'Vremenar',
              project: lane_context[SharedValues::RUN_QMAKE_PROJECT_PATH],
              export_method: 'app-store',
              build_path: 'fastlane/build/ios_store/archive',
              derived_data_path: 'fastlane/build/ios_store/derived_data',
              output_directory: 'fastlane/build/ios_store',
              output_name: 'Vremenar.ipa'
    if ENV['DEPLOY']
      upload_to_testflight api_key_path: 'appstore_api.json',
                           skip_submission: true,
                           skip_waiting_for_build_processing: true
    end
  end
end

platform :android do
  desc 'Make a development build'
  lane :testbuild do
    build_number
    run_cmake platform: 'android',
              build_type: 'development',
              build_path: 'fastlane/build/android/cmake',
              output_path: 'fastlane/build/android'
    ninja
  end

  desc 'Make Google Play Build'
  lane :play do
    build_number
    run_cmake platform: 'android',
              build_type: 'store/play',
              build_path: 'fastlane/build/android_play/cmake',
              output_path: 'fastlane/build/android_play'
    ninja
    create_android_package
  end

  desc 'Deploy Google Play Build'
  lane :play_deploy do
    supply aab: 'fastlane/build/android_play/Vremenar-signed.aab',
           release_status: 'draft',
           track: 'alpha'
  end

  desc 'Make Amazon Build'
  lane :amazon do
    build_number offset: 0
    run_cmake platform: 'android',
              build_type: 'store/amazon',
              build_path: 'fastlane/build/android_amazon/cmake',
              output_path: 'fastlane/build/android_amazon'
    ninja
    create_android_package
  end

  desc 'Make Amazon Fire TV build'
  lane :amazon_firetv do
    build_number offset: -1
    run_cmake platform: 'android',
              build_type: 'store/firetv',
              build_path: 'fastlane/build/android_amazon_firetv/cmake',
              output_path: 'fastlane/build/android_amazon_firetv'
    ninja
    create_android_package
  end

  desc 'Make Amazon Fire 32-bit build'
  lane :amazon_fire32 do
    build_number offset: -2
    run_cmake platform: 'android',
              build_type: 'store/fire32',
              build_path: 'fastlane/build/android_amazon_fire32/cmake',
              output_path: 'fastlane/build/android_amazon_fire32'
    ninja
    create_android_package
  end

  desc 'Make Amazon Fire 64-bit build'
  lane :amazon_fire64 do
    build_number offset: -3
    run_cmake platform: 'android',
              build_type: 'store/fire64',
              build_path: 'fastlane/build/android_amazon_fire64/cmake',
              output_path: 'fastlane/build/android_amazon_fire64'
    ninja
    create_android_package
  end
end
